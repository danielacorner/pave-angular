todos
-----

next:
- materializecss
  - scale-transition, scale-out, scale-in classes https://materializecss.com/css-transitions.html#!
  - floating button https://materializecss.com/buttons.html
    - replicate this style https://material.io/design/components/sheets-bottom.html#behavior
      - halfway FAB in navbar https://materializecss.com/navbar.html
- debug mobile view: positioning after filtering

- colour spectra for each colour-sort variable
- url input/output :param for filter, sort, size, colour, sort state
- something like pave.com/24-14-00-08-industry-salary-1-0
- finesse forces, padding
- graph mode

bugs:
- colour sort split and labels - not responsive to number of clusters or zoom
- mobile/tablet tooltip tap behaviour (detect mobile/tablet API?)
- Graph view button z index (should be below tooltip)
- click once, same job still selected
- sliders move when used on tablet

potential next steps:

1. ----- Style the App -----
  MOBILE (minimal) setup & responsive design
  - position navbar search and top buttons responsively
  - after screen resize, reset the transform to center (when filtered and zoomed)
  - bottom-sheet: show only header preview & 'details' btn, no overlay
   - viz setup (tooltip details bottom card,
    drag up to open details? other functionality?)
   - size graph view based on screen width
   - subtract filters height wherever subtracting navbarheight
  Graph view:
   - axes

potential information visualization channels
-continuous colour scale
-direction of lines
-opacity
-bars overlaid on nodes


2. ----- Build the Features -----

BIG features:
  Accesibility:
    i. mobile devices: static version, PWA (using a memory-detecting API)
    ii. blindness & low motor skill: screenreader-friendly, keyboard-friendly, alt-text,
      determine how someone would navigate with their keyboard
      look at jobbank ?
  a. Multi-level viz with jobs > schools > scholarships ?
    e.g. orbital tree xenographics https://xeno.graphics/orbital-tree/
  b. Tooltip details pages: charts, use-cases, takeaways
    "can i, should i, how do i do this"
  c. Shareable filter-state 'snapshots' as url parameters

  Reset filters button
  Implement 'sub-levels' of the viz
   - like 'expand filtered results into schools offering these programs'
  Save favourites feature
   - optional: user profiles & user database
  Search jobs by keyword (w/ material autocomplete)
   - output data table
  Filter viz by keyword (w/ material autocomplete)
   - output filtered viz
  Change clustering:
    -new colour scale w/ unique colour per cluster
    -floating annotation/indicator per cluster
    -bugfix/modularize different-category clustering
  Legends & filtering by the legend (change opacity of groups)
  Hook filters together (output minimum levels)
  Cluster independently of colours
    -'colour by' for colour scale grokking


3. ----- Refactor the Code -----
  improve app speed/performance
          (note to self: use EventEmitter on ticked function)
  clean/organize code for flexibility & extensibility
    - break out large components into units


4. ----- study automated scraping -----
5. ----- pause, work on own stuff -----


----- from JE research -----
change clustering to "browse by..."
tooltip:
- browse by discipline (cards, icons)
  - browse by program (15 top-level categories)
    - program name
    - tuition
    - type of degree
    - duration, start date
    - view course details
    - link to specific scholarships

- bugfix: settimeout 0 for each step of apply draghandler to new nodes
- force simulation customization
  - transition in the circles delayed by cluster
- extract simulation component?

- optional: transition bottom-to-bottom tooltip position
- expand tooltip avatar to img on expand?
- calculate numClusters from dataset
- when tooltip closed, if bottom style not null,
  transition back to top position
- bring in the colorScale
- favourites material checkbox
simulation
forceXCombine
forceYCombine
numClusters
width
height
navbarHeight
